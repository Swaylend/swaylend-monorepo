type MarketConfiguration @entity {
    id: ID!
    chainId: String!
    contractAddress: String!
    baseTokenAddress: String!
    baseTokenDecimals: Int!
}

type CollateralConfiguration @entity {
    id: ID!
    chainId: String!
    contractAddress: String!
    assetAddress: String!
    decimals: Int!
}

type Pool @entity {
    id: ID! # Constructed as chainId_poolAddress_underlyingTokenAddress
    chainId: String!
    creationBlockNumber: Int!
    creationTimestamp: Int!
    underlyingTokenAddress: String! # Address of the underlying token (collateral, base)
    underlyingTokenSymbol: String!
    receiptTokenAddress: String!
    receiptTokenSymbol: String!
    poolAddress: String! # Contract address of the pool (market)
    poolType: String! # collteral_only or supply_only
}

type PositionSnapshot @entity {
    id: ID!
    timestamp: Int!
    chainId: String!
    poolAddress: String!
    underlyingTokenAddress: String!
    underlyingTokenSymbol: String!
    userAddress: String!
    suppliedAmount: BigDecimal!
    suppliedAmountUsd: BigDecimal
    borrowedAmount: BigDecimal!
    borrowedAmountUsd: BigDecimal
    collateralAmount: BigDecimal!
    collateralAmountUsd: BigDecimal
}

type PoolSnapshot @entity {
    id: ID!
    timestamp: Int!
    chainId: String!
    poolAddress: String!
    underlyingTokenAddress: String!
    underlyingTokenSymbol: String!
    underlyingTokenPriceUsd: BigDecimal
    availableAmount: BigDecimal!
    availableAmountUsd: BigDecimal
    suppliedAmount: BigDecimal!
    suppliedAmountUsd: BigDecimal
    nonRecursiveSuppliedAmount: BigDecimal
    collateralAmount: BigDecimal
    collateralAmountUsd: BigDecimal
    collateralFactor: BigDecimal!
    supplyIndex: BigDecimal!
    supplyApr: BigDecimal!
    borrowedAmount: BigDecimal!
    borrowedAmountUsd: BigDecimal
    borrowIndex: BigDecimal!
    borrowApr: BigDecimal!
    totalFeesUsd: BigDecimal
    userFeesUsd: BigDecimal
    protocolFeesUsd: BigDecimal
}